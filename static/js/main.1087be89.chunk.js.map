{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","map","user","i","username","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wOAeeA,EAbF,SAACC,GACV,IAAQC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACrB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA2BH,EAA3B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCYLK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OACK,8BAEOA,EAAOC,KAAI,SAACC,EAAMC,GACd,OAAO,cAAC,EAAD,CAEPR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,MACjBU,SAAUJ,EAAOG,GAAGC,UAJfD,SCMVE,EAbG,SAACb,GACf,IAAOc,EAAgBd,EAAhBc,aACP,OACG,uBACAV,UAAU,mCACVW,KAAK,SACLC,YAAY,oBACZC,SAAYH,KCEJI,EAVA,SAAClB,GACZ,OACI,qBAAKmB,MAAO,CAACC,SAAU,SAAUC,OAAQ,wBAAyBC,OAAQ,SAA1E,SACKtB,EAAMuB,YCiBJC,G,wDAnBX,WAAYxB,GAAQ,IAAD,8BACf,cAAMA,IACDyB,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,uDAEJG,KAAK7B,MAAMuB,a,GAhBCQ,cCiDZC,E,kDA3CX,aAAe,IAAD,8BACV,gBAgBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAhBzC,EAAKZ,MAAQ,CACTjB,OAAQ,GACR2B,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBG,MAAM,6CAA6CC,MAAK,SAAAC,GACrD,OAAOA,EAASC,UAElBF,MAAK,SAAAG,GACF,EAAKZ,SAAS,CAACtB,OAAQkC,S,oBAQ/B,WACQ,MAAgCb,KAAKJ,MAA7BjB,EAAR,EAAQA,OAAQ2B,EAAhB,EAAgBA,YACVQ,EAAenC,EAAOoC,QAAO,SAAAC,GACnC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAGzD,OAAQtC,EAAOwC,OAEP,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQmC,WAPd,oBAAIvC,UAAU,KAAd,yB,GA5Bd2B,aCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,8BACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.1087be89.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    const { name, email, id } = props;\r\n    return(\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt='robots' src= {`https://robohash.org/${id}?200*200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    // const { robots } = props;\r\n    return(\r\n         <div>\r\n             {\r\n                robots.map((user, i) => {\r\n                    return <Card \r\n                    key={i} \r\n                    id={robots[i].id} \r\n                    name={robots[i].name} \r\n                    email={robots[i].email} \r\n                    username={robots[i].username} />\r\n                })\r\n             }\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox = (props) => {\r\n    const {searchChange} = props;\r\n    return(\r\n       <input \r\n       className='pa3 ba b--green bg-lightest-blue' \r\n       type='search' \r\n       placeholder=\"search robots... \" \r\n       onChange = {searchChange}    \r\n       /> \r\n       \r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflow: 'scroll', border: '5px solid transperant', height: '800px'}}>\r\n            {props.children}\r\n\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return <h1>Something went wrong!</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\nimport './App.css';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://jsonplaceholder.typicode.com/users').then(response => {\r\n           return response.json();\r\n        })\r\n        .then(users => {\r\n            this.setState({robots: users})\r\n        })\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n\r\n    render(){\r\n            const { robots, searchfield } = this.state;\r\n            const filterRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n\r\n        return !robots.length ? <h1 className='tc'>Loading</h1> :\r\n            (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>Robofriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filterRobots} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            )\r\n        }\r\n   \r\n}\r\n\r\nexport default App;\r\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}